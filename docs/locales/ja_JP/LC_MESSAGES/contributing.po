# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2023, The Solidity Authors
# This file is distributed under the same license as the Solidity package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Solidity 0.8.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-18 04:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja_JP\n"
"Language-Team: ja_JP <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../contributing.rst:3 f591d4c09e714b39b59177b9c3d76c05
msgid "Contributing"
msgstr ""

#: ../../contributing.rst:5 32ddabc2b26047b2b08748d07f953b61
msgid ""
"Help is always welcome and there are plenty of options to contribute to "
"Solidity."
msgstr ""

#: ../../contributing.rst:7 6a5f17992d5f4d0683a969ea76989ee9
msgid "In particular, we appreciate support in the following areas:"
msgstr ""

#: ../../contributing.rst:9 918fc9b7cce94f0ebeccbfd729fdb776
msgid "Reporting issues."
msgstr ""

#: ../../contributing.rst:10 80ca30caaff246d7ae3e87c99f1cf83b
#, python-format
msgid ""
"Fixing and responding to `Solidity's GitHub issues "
"<https://github.com/ethereum/solidity/issues>`_, especially those tagged "
"as `\"good first issue\" "
"<https://github.com/ethereum/solidity/labels/good%20first%20issue>`_ "
"which are meant as introductory issues for external contributors."
msgstr ""

#: ../../contributing.rst:14 e58123bce26544bcb00efe8d0b59bc29
msgid "Improving the documentation."
msgstr ""

#: ../../contributing.rst:15 3407d8e521f743f88cee1082798d6815
msgid ""
"`Translating <https://github.com/solidity-docs>`_ the documentation into "
"more languages."
msgstr ""

#: ../../contributing.rst:16 891283ff6a3e447187cad1d1f76dbe20
msgid ""
"Responding to questions from other users on `StackExchange "
"<https://ethereum.stackexchange.com>`_ and the `Solidity Gitter Chat "
"<https://gitter.im/ethereum/solidity>`_."
msgstr ""

#: ../../contributing.rst:19 5cfc94943f9f4b74a5b259c384264639
msgid ""
"Getting involved in the language design process by proposing language "
"changes or new features in the `Solidity forum "
"<https://forum.soliditylang.org/>`_ and providing feedback."
msgstr ""

#: ../../contributing.rst:21 0409259509874466a663e2b8c6f14dbc
msgid ""
"To get started, you can try :ref:`building-from-source` in order to "
"familiarize yourself with the components of Solidity and the build "
"process. Also, it may be useful to become well-versed at writing smart-"
"contracts in Solidity."
msgstr ""

#: ../../contributing.rst:25 239cdc88f6dd416dad8f6ce1a8d6d82c
msgid ""
"Please note that this project is released with a `Contributor Code of "
"Conduct "
"<https://raw.githubusercontent.com/ethereum/solidity/develop/CODE_OF_CONDUCT.md>`_."
" By participating in this project — in the issues, pull requests, or "
"Gitter channels — you agree to abide by its terms."
msgstr ""

#: ../../contributing.rst:28 ab9dcbabee984c4997d02e660a3f5e62
msgid "Team Calls"
msgstr ""

#: ../../contributing.rst:30 5bb33705dc654ba6b6ac6c7a9ed53bdc
msgid ""
"If you have issues or pull requests to discuss, or are interested in "
"hearing what the team and contributors are working on, you can join our "
"public team calls:"
msgstr ""

#: ../../contributing.rst:33 0cc1b317686d450191ac6b5224b8610b
msgid "Mondays and Wednesdays at 3PM CET/CEST."
msgstr ""

#: ../../contributing.rst:35 b2e5bce2c1a643908ba5dd7bc486868b
msgid "Both calls take place on `Jitsi <https://meet.soliditylang.org/>`_."
msgstr ""

#: ../../contributing.rst:38 bea5f0745da44f189d0aa56bdf396582
msgid "How to Report Issues"
msgstr ""

#: ../../contributing.rst:40 0fe402ac29dc4e4399f52be25ab58230
msgid ""
"To report an issue, please use the `GitHub issues tracker "
"<https://github.com/ethereum/solidity/issues>`_. When reporting issues, "
"please mention the following details:"
msgstr ""

#: ../../contributing.rst:44 78beef63b4524baeb060d9222e7b0da8
msgid "Solidity version."
msgstr ""

#: ../../contributing.rst:45 43e41c582d1549969fdd4bdd881574a9
msgid "Source code (if applicable)."
msgstr ""

#: ../../contributing.rst:46 a650711ba1074efa8b2169ea8aa0d0cf
msgid "Operating system."
msgstr ""

#: ../../contributing.rst:47 b25e21ee92df4c58a23f2aae371c184b
msgid "Steps to reproduce the issue."
msgstr ""

#: ../../contributing.rst:48 ae87d6504e10425483ccede94bffe756
msgid "Actual vs. expected behaviour."
msgstr ""

#: ../../contributing.rst:50 563edaa69f33406ab826565ed4d85c8e
msgid ""
"Reducing the source code that caused the issue to a bare minimum is "
"always very helpful, and sometimes even clarifies a misunderstanding."
msgstr ""

#: ../../contributing.rst:53 5a181007a4f9451093d879314562f623
msgid ""
"For technical discussions about language design, a post in the `Solidity "
"forum <https://forum.soliditylang.org/>`_ is the correct place (see "
":ref:`solidity_language_design`)."
msgstr ""

#: ../../contributing.rst:57 4d0c50996d0c4694ad83814563c956fb
msgid "Workflow for Pull Requests"
msgstr ""

#: ../../contributing.rst:59 3c00bacc563041e388358226366b3e37
msgid ""
"In order to contribute, please fork off of the ``develop`` branch and "
"make your changes there. Your commit messages should detail *why* you "
"made your change in addition to *what* you did (unless it is a tiny "
"change)."
msgstr ""

#: ../../contributing.rst:63 1b32ec0ec2624685b72f6d09e31b3390
msgid ""
"If you need to pull in any changes from ``develop`` after making your "
"fork (for example, to resolve potential merge conflicts), please avoid "
"using ``git merge`` and instead, ``git rebase`` your branch. This will "
"help us review your change more easily."
msgstr ""

#: ../../contributing.rst:68 107c4750aaa24ea69e02759a13eb1dc6
msgid ""
"Additionally, if you are writing a new feature, please ensure you add "
"appropriate test cases under ``test/`` (see below)."
msgstr ""

#: ../../contributing.rst:71 019dd7b7cd9949ad8178dd5c62207969
msgid ""
"However, if you are making a larger change, please consult with the "
"`Solidity Development Gitter channel <https://gitter.im/ethereum"
"/solidity-dev>`_ (different from the one mentioned above — this one is "
"focused on compiler and language development instead of language usage) "
"first."
msgstr ""

#: ../../contributing.rst:75 980c918c33ca45afb4f608053b0816b5
msgid ""
"New features and bugfixes should be added to the ``Changelog.md`` file: "
"please follow the style of previous entries, when applicable."
msgstr ""

#: ../../contributing.rst:78 4608d0d765844271b2979cbdd9cf76d4
msgid ""
"Finally, please make sure you respect the `coding style "
"<https://github.com/ethereum/solidity/blob/develop/CODING_STYLE.md>`_ for"
" this project. Also, even though we do CI testing, please test your code "
"and ensure that it builds locally before submitting a pull request."
msgstr ""

#: ../../contributing.rst:83 f205e9766f2c4016b80b31a7a9890832
msgid ""
"We highly recommend going through our `review checklist "
"<https://github.com/ethereum/solidity/blob/develop/ReviewChecklist.md>`_ "
"before submitting the pull request. We thoroughly review every PR and "
"will help you get it right, but there are many common problems that can "
"be easily avoided, making the review much smoother."
msgstr ""

#: ../../contributing.rst:86 0163a8af38e1437a954caa44d16e3e8a
msgid "Thank you for your help!"
msgstr ""

#: ../../contributing.rst:89 bfc058f27d4c4963911a4aa06440cf89
msgid "Running the Compiler Tests"
msgstr ""

#: ../../contributing.rst:92 e4810fd6a0a947d699875db4cbb3fa49
msgid "Prerequisites"
msgstr ""

#: ../../contributing.rst:94 6d4e65eaff984180a92592ab9e18de74
msgid ""
"For running all compiler tests you may want to optionally install a few "
"dependencies (`evmone <https://github.com/ethereum/evmone/releases>`_, "
"`libz3 <https://github.com/Z3Prover/z3>`_, and `libhera "
"<https://github.com/ewasm/hera>`_)."
msgstr ""

#: ../../contributing.rst:99 086988e1b9c24046a8c390d00e4ab514
msgid ""
"On macOS systems, some of the testing scripts expect GNU coreutils to be "
"installed. This can be easiest accomplished using Homebrew: ``brew "
"install coreutils``."
msgstr ""

#: ../../contributing.rst:102 57f16f8ea6a64250b66948f66e39ac9f
msgid ""
"On Windows systems, make sure that you have a privilege to create "
"symlinks, otherwise several tests may fail. Administrators should have "
"that privilege, but you may also `grant it to other users "
"<https://learn.microsoft.com/en-us/windows/security/threat-protection"
"/security-policy-settings/create-symbolic-links#policy-management>`_ or "
"`enable Developer Mode <https://learn.microsoft.com/en-us/windows/apps"
"/get-started/enable-your-device-for-development>`_."
msgstr ""

#: ../../contributing.rst:110 65cc62a6a7cd43498413aa0c6be9517a
msgid "Running the Tests"
msgstr ""

#: ../../contributing.rst:112 e817c620fbd643b2851c4aea356426b4
msgid ""
"Solidity includes different types of tests, most of them bundled into the"
" `Boost C++ Test Framework "
"<https://www.boost.org/doc/libs/release/libs/test/doc/html/index.html>`_ "
"application ``soltest``. Running ``build/test/soltest`` or its wrapper "
"``scripts/soltest.sh`` is sufficient for most changes."
msgstr ""

#: ../../contributing.rst:116 e33d1b8ad9e04b46a2c205378d38e6ce
msgid ""
"The ``./scripts/tests.sh`` script executes most Solidity tests "
"automatically, including those bundled into the `Boost C++ Test Framework"
" <https://www.boost.org/doc/libs/release/libs/test/doc/html/index.html>`_"
" application ``soltest`` (or its wrapper ``scripts/soltest.sh``), as well"
" as command line tests and compilation tests."
msgstr ""

#: ../../contributing.rst:121 3f359994093f40ec98098045d28fbc43
msgid ""
"The test system automatically tries to discover the location of the "
"`evmone <https://github.com/ethereum/evmone/releases>`_ for running the "
"semantic tests."
msgstr ""

#: ../../contributing.rst:124 3244860a8ed645b292b916946250a1e0
msgid ""
"The ``evmone`` library must be located in the ``deps`` or ``deps/lib`` "
"directory relative to the current working directory, to its parent or its"
" parent's parent. Alternatively, an explicit location for the ``evmone`` "
"shared object can be specified via the ``ETH_EVMONE`` environment "
"variable."
msgstr ""

#: ../../contributing.rst:128 af4f065dcc024984bc45cfd3a1305c8c
msgid ""
"``evmone`` is needed mainly for running semantic and gas tests. If you do"
" not have it installed, you can skip these tests by passing the ``--no-"
"semantic-tests`` flag to ``scripts/soltest.sh``."
msgstr ""

#: ../../contributing.rst:132 dde01eae74624391af889b6886e281b5
msgid ""
"Running Ewasm tests is disabled by default and can be explicitly enabled "
"via ``./scripts/soltest.sh --ewasm`` and requires `hera "
"<https://github.com/ewasm/hera>`_ to be found by ``soltest``. The "
"mechanism for locating the ``hera`` library is the same as for "
"``evmone``, except that the variable for specifying an explicit location "
"is called ``ETH_HERA``."
msgstr ""

#: ../../contributing.rst:138 851d65ca8e264897a3e040749a440704
msgid ""
"The ``evmone`` and ``hera`` libraries should both end with the file name "
"extension ``.so`` on Linux, ``.dll`` on Windows systems and ``.dylib`` on"
" macOS."
msgstr ""

#: ../../contributing.rst:141 587225db43e74cb6bd9c5ebd61e4b510
msgid ""
"For running SMT tests, the ``libz3`` library must be installed and "
"locatable by ``cmake`` during compiler configure stage."
msgstr ""

#: ../../contributing.rst:144 2b60e948f4bc402ca73fa0190601035f
msgid ""
"If the ``libz3`` library is not installed on your system, you should "
"disable the SMT tests by exporting ``SMT_FLAGS=--no-smt`` before running "
"``./scripts/tests.sh`` or running ``./scripts/soltest.sh --no-smt``. "
"These tests are ``libsolidity/smtCheckerTests`` and "
"``libsolidity/smtCheckerTestsJSON``."
msgstr ""

#: ../../contributing.rst:151 bdf882fa546244bc8f9a4be17a5b9860
msgid ""
"To get a list of all unit tests run by Soltest, run "
"``./build/test/soltest --list_content=HRF``."
msgstr ""

#: ../../contributing.rst:153 f2fee0bc571e47ad916c7e2ec4581a6c
msgid "For quicker results you can run a subset of, or specific tests."
msgstr ""

#: ../../contributing.rst:155 1887399413ac45beafe7090fd0a42032
msgid ""
"To run a subset of tests, you can use filters: ``./scripts/soltest.sh -t "
"TestSuite/TestName``, where ``TestName`` can be a wildcard ``*``."
msgstr ""

#: ../../contributing.rst:159 51812c93d91d4f718dced473bd970963
msgid ""
"Or, for example, to run all the tests for the yul disambiguator: "
"``./scripts/soltest.sh -t \"yulOptimizerTests/disambiguator/*\" --no-"
"smt``."
msgstr ""

#: ../../contributing.rst:162 6929f4ab3e1a423598917c0795a17f4b
msgid ""
"``./build/test/soltest --help`` has extensive help on all of the options "
"available."
msgstr ""

#: ../../contributing.rst:164 1f783ac313e848ddb19e941e011e774a
msgid "See especially:"
msgstr ""

#: ../../contributing.rst:166 807b30e206e24d8e9f0098cde5be5b23
msgid ""
"`show_progress (-p) "
"<https://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/show_progress.html>`_"
" to show test completion,"
msgstr ""

#: ../../contributing.rst:167 def10640a7df4ce6936359afbc9d691d
msgid ""
"`run_test (-t) "
"<https://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/run_test.html>`_"
" to run specific tests cases, and"
msgstr ""

#: ../../contributing.rst:168 1bc96c599f83437fb44120d1a9c2d874
msgid ""
"`report-level (-r) "
"<https://www.boost.org/doc/libs/release/libs/test/doc/html/boost_test/utf_reference/rt_param_reference/report_level.html>`_"
" give a more detailed report."
msgstr ""

#: ../../contributing.rst:172 085447baed3a4559bf85ed8fd4603b96
msgid ""
"Those working in a Windows environment wanting to run the above basic "
"sets without libz3. Using Git Bash, you use: "
"``./build/test/Release/soltest.exe -- --no-smt``. If you are running this"
" in plain Command Prompt, use ``.\\build\\test\\Release\\soltest.exe -- "
"--no-smt``."
msgstr ""

#: ../../contributing.rst:176 a86f574bdaf64c1f8e97f54ccc1bffc6
msgid ""
"If you want to debug using GDB, make sure you build differently than the "
"\"usual\". For example, you could run the following command in your "
"``build`` folder: .. code-block:: bash"
msgstr ""

#: ../../contributing.rst:180 4887efbafe824911baba6c1c08414b91
msgid "cmake -DCMAKE_BUILD_TYPE=Debug .. make"
msgstr ""

#: ../../contributing.rst:183 5cd5d2c9d1184a87810d2906b0892bbd
msgid ""
"This creates symbols so that when you debug a test using the ``--debug`` "
"flag, you have access to functions and variables in which you can break "
"or print with."
msgstr ""

#: ../../contributing.rst:186 106bcc080e614fa6948e95c6bf94c5ef
msgid ""
"The CI runs additional tests (including ``solc-js`` and testing third "
"party Solidity frameworks) that require compiling the Emscripten target."
msgstr ""

#: ../../contributing.rst:190 68c4d09cd0154f2fbb87116f33f5adf6
msgid "Writing and Running Syntax Tests"
msgstr ""

#: ../../contributing.rst:192 d81a50009768492187e8eccaf9354c7d
msgid ""
"Syntax tests check that the compiler generates the correct error messages"
" for invalid code and properly accepts valid code. They are stored in "
"individual files inside the ``tests/libsolidity/syntaxTests`` folder. "
"These files must contain annotations, stating the expected result(s) of "
"the respective test. The test suite compiles and checks them against the "
"given expectations."
msgstr ""

#: ../../contributing.rst:198 76eae1a73152410d8c6cc7f209d473e9
msgid ""
"For example: "
"``./test/libsolidity/syntaxTests/double_stateVariable_declaration.sol``"
msgstr ""

#: ../../contributing.rst:209 3a81fda727114cc38a3fcb2e497ffe26
msgid ""
"A syntax test must contain at least the contract under test itself, "
"followed by the separator ``// ----``. The comments that follow the "
"separator are used to describe the expected compiler errors or warnings. "
"The number range denotes the location in the source where the error "
"occurred. If you want the contract to compile without any errors or "
"warning you can leave out the separator and the comments that follow it."
msgstr ""

#: ../../contributing.rst:214 31b462a5b3474c46a39979c94bc0f69f
msgid ""
"In the above example, the state variable ``variable`` was declared twice,"
" which is not allowed. This results in a ``DeclarationError`` stating "
"that the identifier was already declared."
msgstr ""

#: ../../contributing.rst:216 2c673530a1264f20bcba706e7991afea
msgid ""
"The ``isoltest`` tool is used for these tests and you can find it under "
"``./build/test/tools/``. It is an interactive tool which allows editing "
"of failing contracts using your preferred text editor. Let's try to break"
" this test by removing the second declaration of ``variable``:"
msgstr ""

#: ../../contributing.rst:227 fd8de7c80de04d0f872cdadb36a3100b
msgid "Running ``./build/test/tools/isoltest`` again results in a test failure:"
msgstr ""

#: ../../contributing.rst:243 4390d5c25e5041789fdeb08902a5d4b2
msgid ""
"``isoltest`` prints the expected result next to the obtained result, and "
"also provides a way to edit, update or skip the current contract file, or"
" quit the application."
msgstr ""

#: ../../contributing.rst:246 c0b3e2e8bb43499d8071823dfd599fda
msgid "It offers several options for failing tests:"
msgstr ""

#: ../../contributing.rst:248 ed7521a74923406a8fc83d80964e1f46
msgid ""
"``edit``: ``isoltest`` tries to open the contract in an editor so you can"
" adjust it. It either uses the editor given on the command line (as "
"``isoltest --editor /path/to/editor``), in the environment variable "
"``EDITOR`` or just ``/usr/bin/editor`` (in that order)."
msgstr ""

#: ../../contributing.rst:249 fab3ff0755a647f494218e650521f4da
msgid ""
"``update``: Updates the expectations for contract under test. This "
"updates the annotations by removing unmet expectations and adding missing"
" expectations. The test is then run again."
msgstr ""

#: ../../contributing.rst:250 8e845cfd4c48484c98ae2338f3849172
msgid "``skip``: Skips the execution of this particular test."
msgstr ""

#: ../../contributing.rst:251 37c555216e4e4bd49811d0279cca3fee
msgid "``quit``: Quits ``isoltest``."
msgstr ""

#: ../../contributing.rst:253 fe98b504cde24552a6ccc204e39f77e4
msgid ""
"All of these options apply to the current contract, except ``quit`` which"
" stops the entire testing process."
msgstr ""

#: ../../contributing.rst:255 411b4c88621e4b9f92f53cb6602a1b26
msgid "Automatically updating the test above changes it to"
msgstr ""

#: ../../contributing.rst:264 2de130d345924d249a250bec27b59ff1
msgid "and re-run the test. It now passes again:"
msgstr ""

#: ../../contributing.rst:274 996fc22058bc471db4906406ed7f4d23
msgid ""
"Choose a name for the contract file that explains what it tests, e.g. "
"``double_variable_declaration.sol``. Do not put more than one contract "
"into a single file, unless you are testing inheritance or cross-contract "
"calls. Each file should test one aspect of your new feature."
msgstr ""

#: ../../contributing.rst:280 6f90a0c7bf364a1b9450089a2530aeb1
msgid "Running the Fuzzer via AFL"
msgstr ""

#: ../../contributing.rst:282 aa8528273611455488c2206fcb784677
msgid ""
"Fuzzing is a technique that runs programs on more or less random inputs "
"to find exceptional execution states (segmentation faults, exceptions, "
"etc). Modern fuzzers are clever and run a directed search inside the "
"input. We have a specialized binary called ``solfuzzer`` which takes "
"source code as input and fails whenever it encounters an internal "
"compiler error, segmentation fault or similar, but does not fail if e.g.,"
" the code contains an error. This way, fuzzing tools can find internal "
"problems in the compiler."
msgstr ""

#: ../../contributing.rst:288 d2a61f40a1c84044bbf1338ecc9d4e65
msgid ""
"We mainly use `AFL <https://lcamtuf.coredump.cx/afl/>`_ for fuzzing. You "
"need to download and install the AFL packages from your repositories "
"(afl, afl-clang) or build them manually. Next, build Solidity (or just "
"the ``solfuzzer`` binary) with AFL as your compiler:"
msgstr ""

#: ../../contributing.rst:300 726bce757dce4ce7b4fa4032883a7719
msgid ""
"At this stage, you should be able to see a message similar to the "
"following:"
msgstr ""

#: ../../contributing.rst:311 719e6be3fd1c474c8e7cd291b58c89c5
msgid ""
"If the instrumentation messages did not appear, try switching the cmake "
"flags pointing to AFL's clang binaries:"
msgstr ""

#: ../../contributing.rst:320 3c7784c761064084addf54eabd57d8c8
msgid ""
"Otherwise, upon execution the fuzzer halts with an error saying binary is"
" not instrumented:"
msgstr ""

#: ../../contributing.rst:342 f1dc0cc67b1948f599c4f61f324ec325
msgid ""
"Next, you need some example source files. This makes it much easier for "
"the fuzzer to find errors. You can either copy some files from the syntax"
" tests or extract test files from the documentation or the other tests:"
msgstr ""

#: ../../contributing.rst:355 6cf3f566d5a24bf591d8510be0164f7a
msgid ""
"The AFL documentation states that the corpus (the initial input files) "
"should not be too large. The files themselves should not be larger than 1"
" kB and there should be at most one input file per functionality, so "
"better start with a small number of. There is also a tool called ``afl-"
"cmin`` that can trim input files that result in similar behaviour of the "
"binary."
msgstr ""

#: ../../contributing.rst:361 b0e263eacec74dd9b7471328268ea80b
msgid "Now run the fuzzer (the ``-m`` extends the size of memory to 60 MB):"
msgstr ""

#: ../../contributing.rst:367 1b38a785f4d44f94881c078f6e85f48a
msgid ""
"The fuzzer creates source files that lead to failures in "
"``/tmp/fuzzer_reports``. Often it finds many similar source files that "
"produce the same error. You can use the tool ``scripts/uniqueErrors.sh`` "
"to filter out the unique errors."
msgstr ""

#: ../../contributing.rst:372 2e97f99d943c4d978f553331d8171d85
msgid "Whiskers"
msgstr ""

#: ../../contributing.rst:374 ba5631d21b76426bbcd21df9e14b43ef
msgid ""
"*Whiskers* is a string templating system similar to `Mustache "
"<https://mustache.github.io>`_. It is used by the compiler in various "
"places to aid readability, and thus maintainability and verifiability, of"
" the code."
msgstr ""

#: ../../contributing.rst:377 ec6ccf4111864469a025f64fcf7e9932
msgid ""
"The syntax comes with a substantial difference to Mustache. The template "
"markers ``{{`` and ``}}`` are replaced by ``<`` and ``>`` in order to aid"
" parsing and avoid conflicts with :ref:`yul` (The symbols ``<`` and ``>``"
" are invalid in inline assembly, while ``{`` and ``}`` are used to "
"delimit blocks). Another limitation is that lists are only resolved one "
"depth and they do not recurse. This may change in the future."
msgstr ""

#: ../../contributing.rst:382 cf1f493407ab42c3aecb4d56779768ae
msgid "A rough specification is the following:"
msgstr ""

#: ../../contributing.rst:384 049e70eca9bd4c2f89f5854994983bca
msgid ""
"Any occurrence of ``<name>`` is replaced by the string-value of the "
"supplied variable ``name`` without any escaping and without iterated "
"replacements. An area can be delimited by ``<#name>...</name>``. It is "
"replaced by as many concatenations of its contents as there were sets of "
"variables supplied to the template system, each time replacing any "
"``<inner>`` items by their respective value. Top-level variables can also"
" be used inside such areas."
msgstr ""

#: ../../contributing.rst:390 ebe5db91c08d4d6f927219a29f771f18
msgid ""
"There are also conditionals of the form ``<?name>...<!name>...</name>``, "
"where template replacements continue recursively either in the first or "
"the second segment depending on the value of the boolean parameter "
"``name``. If ``<?+name>...<!+name>...</+name>`` is used, then the check "
"is whether the string parameter ``name`` is non-empty."
msgstr ""

#: ../../contributing.rst:398 1b5944dbc693415cb339d7bf35f92f9a
msgid "Documentation Style Guide"
msgstr ""

#: ../../contributing.rst:400 4d8bf737456e4a58836e6f56080e9e84
msgid ""
"In the following section you find style recommendations specifically "
"focusing on documentation contributions to Solidity."
msgstr ""

#: ../../contributing.rst:404 32733c0425c34455a215cc69ba37d344
msgid "English Language"
msgstr ""

#: ../../contributing.rst:406 47cb6cc9bde24530a334898704947195
msgid ""
"Use English, with British English spelling preferred, unless using "
"project or brand names. Try to reduce the usage of local slang and "
"references, making your language as clear to all readers as possible. "
"Below are some references to help:"
msgstr ""

#: ../../contributing.rst:409 ee985c7e44cf46f386687d8086041edd
msgid ""
"`Simplified technical English "
"<https://en.wikipedia.org/wiki/Simplified_Technical_English>`_"
msgstr ""

#: ../../contributing.rst:410 920bb414759f4201b52a11e615576a13
msgid ""
"`International English "
"<https://en.wikipedia.org/wiki/International_English>`_"
msgstr ""

#: ../../contributing.rst:411 9f50731d82b148b9be9553746d2e9d18
msgid ""
"`British English spelling "
"<https://web.archive.org/web/20220324094038/https://www.lexico.com/grammar"
"/british-and-spelling>`_"
msgstr ""

#: ../../contributing.rst:416 237ae811540c4e0baaa28a99d61623b6
msgid ""
"While the official Solidity documentation is written in English, there "
"are community contributed :ref:`translations` in other languages "
"available. Please refer to the `translation guide <https://github.com"
"/solidity-docs#solidity-documentation-translation-guide>`_ for "
"information on how to contribute to the community translations."
msgstr ""

#: ../../contributing.rst:421 91a6d4fbf4b641878cc67b1908b2f90c
msgid "Title Case for Headings"
msgstr ""

#: ../../contributing.rst:423 ecfb377b08e44b9fbe44b54d5b957a9e
msgid ""
"Use `title case <https://titlecase.com>`_ for headings. This means "
"capitalise all principal words in titles, but not articles, conjunctions,"
" and prepositions unless they start the title."
msgstr ""

#: ../../contributing.rst:427 7cddaee7dc394fcc9d329c00ebed129e
msgid "For example, the following are all correct:"
msgstr ""

#: ../../contributing.rst:429 45335ee8d2794653b56bb41428fb720b
msgid "Title Case for Headings."
msgstr ""

#: ../../contributing.rst:430 0cb7f13dd4224168a5ae681b287158d5
msgid "For Headings Use Title Case."
msgstr ""

#: ../../contributing.rst:431 ff55345e600b4317ac6f9cef7ff5c7a7
msgid "Local and State Variable Names."
msgstr ""

#: ../../contributing.rst:432 07df49efaff446ff8fbaed97018d0f5e
msgid "Order of Layout."
msgstr ""

#: ../../contributing.rst:435 74106ab96c9741efb95a7cbeaced84db
msgid "Expand Contractions"
msgstr ""

#: ../../contributing.rst:437 93c21f0a79c641d199f4354f0480271e
msgid "Use expanded contractions for words, for example:"
msgstr ""

#: ../../contributing.rst:439 722cfdc660c74f53ad48c65e12c2d22e
msgid "\"Do not\" instead of \"Don't\"."
msgstr ""

#: ../../contributing.rst:440 7b3be9cb16094684896be69ff3987d84
msgid "\"Can not\" instead of \"Can't\"."
msgstr ""

#: ../../contributing.rst:443 9a126e9d7067420fa92e9389ea33fce2
msgid "Active and Passive Voice"
msgstr ""

#: ../../contributing.rst:445 7a91c401f89e440fbaf5429fffff58fd
msgid ""
"Active voice is typically recommended for tutorial style documentation as"
" it helps the reader understand who or what is performing a task. "
"However, as the Solidity documentation is a mixture of tutorials and "
"reference content, passive voice is sometimes more applicable."
msgstr ""

#: ../../contributing.rst:450 1feffeb840664ab6ba8db6efa8c767ec
msgid "As a summary:"
msgstr ""

#: ../../contributing.rst:452 a7e75f28cc8645ed9f6807ad39962bdd
msgid ""
"Use passive voice for technical reference, for example language "
"definition and internals of the Ethereum VM."
msgstr ""

#: ../../contributing.rst:453 a7af2e5fdc1d428cbece7b1da26b75e1
msgid ""
"Use active voice when describing recommendations on how to apply an "
"aspect of Solidity."
msgstr ""

#: ../../contributing.rst:455 2245471d8e2140f0b686fb1f7857c5f5
msgid ""
"For example, the below is in passive voice as it specifies an aspect of "
"Solidity:"
msgstr ""

#: ../../contributing.rst:457 4cfe4dbec6f0475d88fbc32cc547752a
msgid ""
"Functions can be declared ``pure`` in which case they promise not to read"
" from or modify the state."
msgstr ""

#: ../../contributing.rst:460 96986c9f058a476e9d39132b338890d7
msgid ""
"For example, the below is in active voice as it discusses an application "
"of Solidity:"
msgstr ""

#: ../../contributing.rst:462 b3fd08237f224131afde06e3722c3214
msgid ""
"When invoking the compiler, you can specify how to discover the first "
"element of a path, and also path prefix remappings."
msgstr ""

#: ../../contributing.rst:466 ae6aae7bd0544ccdb7b1212d48e25881
msgid "Common Terms"
msgstr ""

#: ../../contributing.rst:468 106607ef420a43759eb3a75816516d5c
msgid ""
"\"Function parameters\" and \"return variables\", not input and output "
"parameters."
msgstr ""

#: ../../contributing.rst:471 629737a52f704bd18396096b8bab19b8
msgid "Code Examples"
msgstr ""

#: ../../contributing.rst:473 fa9f18db76824144882ce4da5878e0fb
msgid ""
"A CI process tests all code block formatted code examples that begin with"
" ``pragma solidity``, ``contract``, ``library`` or ``interface`` using "
"the ``./test/cmdlineTests.sh`` script when you create a PR. If you are "
"adding new code examples, ensure they work and pass tests before creating"
" the PR."
msgstr ""

#: ../../contributing.rst:477 fd53ff91f4f14a89a57df1a5a562ac0b
msgid ""
"Ensure that all code examples begin with a ``pragma`` version that spans "
"the largest where the contract code is valid. For example ``pragma "
"solidity >=0.4.0 <0.9.0;``."
msgstr ""

#: ../../contributing.rst:481 2e6c597f97444bdfb3b4e41a43fecee7
msgid "Running Documentation Tests"
msgstr ""

#: ../../contributing.rst:483 b5a3a3c08d574627b6cb30fefccea3a4
msgid ""
"Make sure your contributions pass our documentation tests by running "
"``./docs/docs.sh`` that installs dependencies needed for documentation "
"and checks for any problems such as broken links or syntax issues."
msgstr ""

#: ../../contributing.rst:489 bdf61061b0fa47b3acc4c3afb10ee7ce
msgid "Solidity Language Design"
msgstr ""

#: ../../contributing.rst:491 e2143370c7c8475e8a7c7746823c8124
msgid ""
"To actively get involved in the language design process and to share your"
" ideas concerning the future of Solidity, please join the `Solidity forum"
" <https://forum.soliditylang.org/>`_."
msgstr ""

#: ../../contributing.rst:494 3456bea1939949b898be6d2ef1bf1e9e
msgid ""
"The Solidity forum serves as the place to propose and discuss new "
"language features and their implementation in the early stages of "
"ideation or modifications of existing features."
msgstr ""

#: ../../contributing.rst:497 ba7a6c572d9046599487d958a2ef4c32
msgid ""
"As soon as proposals get more tangible, their implementation will also be"
" discussed in the `Solidity GitHub repository "
"<https://github.com/ethereum/solidity>`_ in the form of issues."
msgstr ""

#: ../../contributing.rst:501 223c7324527841f0a29d26216e061dd3
msgid ""
"In addition to the forum and issue discussions, we regularly host "
"language design discussion calls in which selected topics, issues or "
"feature implementations are debated in detail. The invitation to those "
"calls is shared via the forum."
msgstr ""

#: ../../contributing.rst:504 c12e0c66105d404ab97c2f308b788765
msgid ""
"We are also sharing feedback surveys and other content that is relevant "
"to language design in the forum."
msgstr ""

#: ../../contributing.rst:506 bb888df6da92449397b94c664a09acef
msgid ""
"If you want to know where the team is standing in terms or implementing "
"new features, you can follow the implementation status in the `Solidity "
"Github project <https://github.com/ethereum/solidity/projects/43>`_. "
"Issues in the design backlog need further specification and will either "
"be discussed in a language design call or in a regular team call. You can"
" see the upcoming changes for the next breaking release by changing from "
"the default branch (`develop`) to the `breaking branch "
"<https://github.com/ethereum/solidity/tree/breaking>`_."
msgstr ""

#: ../../contributing.rst:510 7927c8ee3e2d4fbbb194c434b23d966f
msgid ""
"For ad-hoc cases and questions, you can reach out to us via the "
"`Solidity-dev Gitter channel <https://gitter.im/ethereum/solidity-dev>`_ "
"— a dedicated chatroom for conversations around the Solidity compiler and"
" language development."
msgstr ""

#: ../../contributing.rst:513 ce22318d61fa48b88617a221032f7fb1
msgid ""
"We are happy to hear your thoughts on how we can improve the language "
"design process to be even more collaborative and transparent."
msgstr ""

